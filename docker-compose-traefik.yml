#Version declaration has been deprecated

########################### NETWORKS
networks:
  t2_proxy:
    name: t2_proxy
    driver: bridge
  default:
    name: local_default
    driver: bridge
  socket_proxy:
    name: socket_proxy
    driver: bridge

########################### SERVICES
services:
  traefik:
    container_name: traefik
    image: traefik:v2.10.4
    restart: always
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.https.forwardedHeaders.trustedIPs=${TRUSTED_IPS}
      - --entryPoints.traefik.address=:8080
      - --entryPoints.video.address=:10000/udp
      - --api=true
      - --log=true
      - --log.level=WARN
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=10
      - --accessLog.filters.statusCodes=100-599
      - --providers.docker=true
      - --providers.docker.endpoint=${SOCKET_PROXY}
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.${DOMAINNAME}`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules
      - --providers.file.watch=true
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    networks:
      - t2_proxy
      - socket_proxy 
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 10000
        published: 10000
        protocol: udp
        mode: host
    volumes:
      - ${TRAEFIK_DIR}/rules:/rules 
      - ${TRAEFIK_DIR}/acme/acme.json:/acme.json  
      - ${TRAEFIK_DIR}/traefik.log:/traefik.log
      - ${DOCKER_DIR}/shared:/shared
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
      - TZ
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=${DOMAINNAME}"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.${DOMAINNAME}"
      - "traefik.http.routers.traefik-rtr.tls.domains[1].main=${BLOGDOMAIN}"
      - "traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.${BLOGDOMAIN}"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=traefik-headers,chain-authelia-no-cf@file"  
      - "traefik.http.middlewares.traefik-headers.headers.accesscontrolalloworiginlist=https://${DOMAINNAME}"
      - "traefik.http.middlewares.traefik-headers.headers.allowedhosts=traefik.${DOMAINNAME}" 
      - "traefik.http.middlewares.traefik-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.traefik-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"

  # Docker Socket Proxy
  socket-proxy:
    container_name: socketProxy
    image: tecnativa/docker-socket-proxy
    restart: always
    networks:
      socket_proxy:
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info
      - SEVICES=1
      - CONTAINERS=1
      - NETWORKS=1
      - TASKS=1

  # Heimdall
  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall:latest
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${HEIMDALL_DIR}:/config
    environment:
      - PUID
      - PGID
      - TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=https"
      - "traefik.http.routers.heimdall-rtr.rule=Host(`heimdall.${DOMAINNAME}`) || Host(`${DOMAINNAME}`) || Host(`www.${DOMAINNAME}`)"
      - "traefik.http.routers.heimdall-rtr.tls=true"
      - "traefik.http.routers.heimdall-rtr.tls.options=tls-opts@file"
      # Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=heimdall-redirect@docker,heimdall-headers,chain-authelia@file"
      - "traefik.http.middlewares.heimdall-redirect.redirectregex.regex=^https?://${DOMAINNAME}/(.*)"
      - "traefik.http.middlewares.heimdall-redirect.redirectregex.replacement=https://www.${DOMAINNAME}/$${1}"
      - "traefik.http.middlewares.heimdall-redirect.redirectregex.permanent=true"
      - "traefik.http.middlewares.heimdall-headers.headers.accesscontrolalloworiginlist=https://${DOMAINNAME}"
      - "traefik.http.middlewares.heimdall-headers.headers.allowedhosts=heimdall.${DOMAINNAME},${DOMAINNAME},www.${DOMAINNAME}"
      - "traefik.http.middlewares.heimdall-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.heimdall-headers.headers.contentsecuritypolicy= default-src 'none'; form-action 'self'; img-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
      - "traefik.http.middlewares.heimdall-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=${HEIMDALL_PORT}"
  
  #Gift Wishlist
  wishlist:
    container_name: wishlist
    image: wingysam/christmas-community:1.32.0
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - ${WISHLIST_DIR}/data:/data
      - ${WISHLIST_DIR}/img:/usr/src/app/static/img
      - ${WISHLIST_DIR}/css/main.css:/usr/src/app/static/css/main.css #Fix title bar spacing
    environment:
      - PUID
      - PGID
      - TZ
      - BULMASWATCH
      - PORT=${WISHLIST_PORT}
      - DB_EXPOSE_PORT=${WISHLIST_DB_PORT}
      - SMILE=${WISHLIST_SMILE}
      - SINGLE_LIST=${SINGLE_LIST}
      - SITE_TITLE=${WISHLIST_SITE_TITLE}
      - LISTS_PUBLIC=${WISHLIST_LISTS_PUBLIC}
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.wishlist-rtr.entrypoints=https"
      - "traefik.http.routers.wishlist-rtr.rule=Host(`wishlist.${DOMAINNAME}`)"
      - "traefik.http.routers.wishlist-rtr.tls=true"
      - "traefik.http.routers.wishlist-rtr.tls.options=tls-opts@file"
      # Middlewares
      - "traefik.http.routers.wishlist-rtr.middlewares=wishlist-headers,chain-authelia@file"
      - "traefik.http.middlewares.wishlist-headers.headers.accesscontrolalloworiginlist=https://$DOMAINNAME"
      - "traefik.http.middlewares.wishlist-headers.headers.allowedhosts=wishlist.${DOMAINNAME}"
      - "traefik.http.middlewares.wishlist-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.wishlist-headers.headers.contentsecuritypolicy= default-src 'self'; font-src 'self' https://fonts.gstatic.com; form-action 'self'; img-src *; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.gstatic.com"
      - "traefik.http.middlewares.wishlist-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
         ## HTTP Services
      - "traefik.http.routers.wishlist-rtr.service=wishlist-svc"
      - "traefik.http.services.wishlist-svc.loadbalancer.server.port=${WISHLIST_PORT}"
  
  #DogCam      
  go2rtc:
    image: alexxit/go2rtc:latest
    container_name: go2rtc
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - ${GO2RTC_DIR}:/config
    environment:
      - GO2RTC_PORT
      - BASE_PATH
      - TZ
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.go2rtc-rtr.entrypoints=https"
      - "traefik.http.routers.go2rtc-rtr.rule=Host(`dog.${DOMAINNAME}`)"
      - "traefik.http.routers.go2rtc-rtr.tls=true"
      - "traefik.http.routers.go2rtc-rtr.tls.options=tls-opts@file"
      # Regex redirect
      - "traefik.http.middlewares.go2rtc-stream-redirect.redirectregex.regex=^https?://dog.${DOMAINNAME}/$$"
      - "traefik.http.middlewares.go2rtc-stream-redirect.redirectregex.replacement=https://dog.${DOMAINNAME}${BASE_PATH}/stream.html?src=${CAM_1}&mode=${STREAM_MODE}"
      - "traefik.http.middlewares.go2rtc-stream-redirect.redirectregex.permanent=true"
      # Middlewares
      - "traefik.http.routers.go2rtc-rtr.middlewares=go2rtc-headers,chain-authelia-no-cf@file,go2rtc-stream-redirect"
      - "traefik.http.middlewares.go2rtc-headers.headers.accesscontrolalloworiginlist=https://$DOMAINNAME"
      - "traefik.http.middlewares.go2rtc-headers.headers.allowedhosts=dog.${DOMAINNAME}"
      - "traefik.http.middlewares.go2rtc-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.go2rtc-headers.headers.contentsecuritypolicy=connect-src 'self'; img-src 'self'; script-src 'self' 'sha256-vguJTyH8pRrRWqm7V4xeUfY6y4lNPzG+6LanIQnjTRo=' 'sha256-inHgEVI1ARB8dDHDbhxsj0a2Mg1Ql8sTAjkibYTSiPo='; style-src 'self' 'sha256-a6GDV+5IhEoq/O32LdhToUs/GKnoTW3VKArUGQ2Fd4U=' 'sha256-uldmZibwUatiQkAiAM/ca0pbHTDr8yFmF32B4fczSSc=' 'sha256-HI4QLrOPVrXtlV8CcyKIEl2qnA0jat6kyLNN/ZH9BsU=' 'sha256-Pbnf1TaAoyGss9KtHmYulF9kHcYrCyogVN1uelKqGKs='; media-src blob:"
      - "traefik.http.middlewares.go2rtc-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
        ## HTTP Services
      - "traefik.http.routers.go2rtc-rtr.service=go2rtc-svc"
      - "traefik.http.services.go2rtc-svc.loadbalancer.server.port=${GO2RTC_PORT}"

  #Photo Gallery      
  photoview:
    image: viktorstrate/photoview:edge
    container_name: photoview
    restart: unless-stopped
    depends_on:
      - phdb
    networks:
      - t2_proxy
    volumes:
      - ${PHOTOVIEW_DIR}/appcache:/app/cache
      - ${PHOTO_DIR_1}:/${PHOTOVIEW_USER_1}/photos:ro
      - ${PHOTO_DIR_2}:/${PHOTOVIEW_USER_2}/photos:ro
    environment:
      - PGID 
      - PUID 
      - TZ
      - PHOTOVIEW_DATABASE_DRIVER
      - PHOTOVIEW_MYSQL_URL 
      - PHOTOVIEW_LISTEN_IP
      - PHOTOVIEW_LISTEN_PORT
      - PHOTOVIEW_MEDIA_CACHE
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.photoview-rtr.entrypoints=https"
      - "traefik.http.routers.photoview-rtr.rule=Host(`photo.${DOMAINNAME}`)"
      - "traefik.http.routers.photoview-rtr.tls=true"
      - "traefik.http.routers.photoview-rtr.tls.options=tls-opts@file"
      # Middlewares
      - "traefik.http.routers.photoview-rtr.middlewares=photoview-headers,chain-authelia@file"
      - "traefik.http.middlewares.photoview-headers.headers.accesscontrolalloworiginlist=https://${DOMAINNAME}"
      - "traefik.http.middlewares.photoview-headers.headers.allowedhosts=photo.${DOMAINNAME}"
      - "traefik.http.middlewares.photoview-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.photoview-headers.headers.contentsecuritypolicy= default-src 'none'; img-src 'self'; script-src 'unsafe-inline'"
      - "traefik.http.middlewares.photoview-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
        ## HTTP Services
      - "traefik.http.routers.photoview-rtr.service=photoview-svc"
      - "traefik.http.services.photoview-svc.loadbalancer.server.port=${PHOTOVIEW_LISTEN_PORT}"

  phdb:
    image: mariadb:10.5
    container_name: photoviewDB
    restart: always
    networks:
      - t2_proxy 
    volumes:
      - ${PHOTOVIEWDB_DIR}:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${PHOTOVIEW_DB_NAME}
      - MYSQL_USER=${PHOTOVIEW_DB_USERNAME}
      - MYSQL_PASSWORD=${PHOTOVIEW_DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD 
      - PUID
      - PGID
      - TZ

  # Authelia
  authelia:
    container_name: authelia
    image: authelia/authelia:4.37.5
    restart: always
    networks:
      - t2_proxy
    volumes:
      - ${AUTHELIA_DIR}:/config
    environment:
      - TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=https"
      - "traefik.http.routers.authelia-rtr.rule=Host(`authelia.${DOMAINNAME}`)"
      - "traefik.http.routers.authelia-rtr.tls=true"
      - "traefik.http.routers.authelia-rtr.tls.options=tls-opts@file"        
      # Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=authelia-headers,chain-authelia@file"
      - "traefik.http.middlewares.authelia-headers.headers.accesscontrolalloworiginlist=https://${DOMAINNAME}"
      - "traefik.http.middlewares.authelia-headers.headers.allowedhosts=authelia.${DOMAINNAME}"
      - "traefik.http.middlewares.authelia-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.authelia-headers.headers.contentsecuritypolicy= default-src 'none'; connect-src 'self'; img-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
      - "traefik.http.middlewares.authelia-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
      ## HTTP Services
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=${AUTHELIA_PORT}"

  # Dev codeslikeaduck.com
  blogDev:
    container_name: blogDev
    image: klakegg/hugo:0.111.3-ext-ubuntu
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - ${BLOGDEV_DIR}:/src
    command:
      - server
    environment:
      - PUID
      - PGID
      - TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.blogdev-rtr.entrypoints=https"
      - "traefik.http.routers.blogdev-rtr.rule=Host(`blog.${DOMAINNAME}`)"
      - "traefik.http.routers.blogdev-rtr.tls=true"
      - "traefik.http.routers.blogdev-rtr.tls.options=tls-opts@file"
      # Middlewares
      - "traefik.http.routers.blogdev-rtr.middlewares=blogdev-headers,chain-authelia@file,errorpage-redirect"
      - "traefik.http.middlewares.blogdev-headers.headers.accesscontrolalloworiginlist=https://${DOMAINNAME}"
      - "traefik.http.middlewares.blogdev-headers.headers.allowedhosts=blog.${DOMAINNAME}"
      - "traefik.http.middlewares.blogdev-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.blogdev-headers.headers.contentsecuritypolicy=default-src 'none'; connect-src 'self'; font-src 'self' https://fonts.gstatic.com; img-src 'self'; script-src 'self' 'sha256-5BVM9B5Dy9frPcDpLnaQOeKjPE+7NLNSI5+170llxNU=' https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js; style-src 'self' 'sha256-URsfFweIW8RxEWVIGboHvuOr48keLrxzQBgEBCUkNWk=' https://fonts.googleapis.com"
      - "traefik.http.middlewares.blogdev-headers.headers.permissionsPolicy=ambient-light-sensor 'none'; camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; interest-cohort 'none'"
      ## HTTP Services
      - "traefik.http.routers.blogdev-rtr.service=blogdev-svc"
      - "traefik.http.services.blogdev-svc.loadbalancer.server.port=${BLOG_PORT}"

  geoipfilter:
    image: mpdcampbell/traefik-geoip-filter:1.1
    container_name: geoipfilter
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - ${GEOIP_DIR}:/geoip
    environment:
      - MAXMIND_KEY
      - FILTER_TYPE
      - COUNTRY_CODES
      - SUB_CODES
      - TZ
  